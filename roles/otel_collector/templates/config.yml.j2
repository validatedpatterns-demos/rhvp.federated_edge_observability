exporters:
  otlp:
    endpoint: "{{ otel_collector_otlp_endpoint }}"
    tls:
      insecure_skip_verify: true
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  prometheus/collector:
    config:
      scrape_configs:
      - job_name: 'opentelemetry-collector'
        static_configs:
        - targets: [ 'localhost:8888' ]
  # otelcontribcol metrics + host metrics
  prometheus/agent:
    config:
      scrape_configs:
      - job_name: otel-collector
        scrape_interval: 10s
        static_configs:
        - targets: [ 0.0.0.0:8888 ]
  hostmetrics/agent:
    collection_interval: 10s
    scrapers:
      cpu:
        metrics:
          system.cpu.logical.count:
            enabled: true
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
          system.memory.limit:
            enabled: true
      load:
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      network:
      paging:
      processes:
      process:
        mute_process_user_error: true
        metrics:
          process.cpu.utilization:
            enabled: true
          process.memory.utilization:
            enabled: true
          process.threads:
            enabled: true
          process.paging.faults:
            enabled: true

transform:
  metric_statements:
    - context: datapoint
      statements:
        - set(attributes["host.name"], resource.attributes["host.name"])
        - set(attributes["process.command"], resource.attributes["process.command"])
        - set(attributes["process.command_line"], resource.attributes["process.command_line"])
        - set(attributes["process.executable.name"], resource.attributes["process.executable.name"])
        - set(attributes["process.executable.path"], resource.attributes["process.executable.path"])
        - set(attributes["process.owner"], resource.attributes["process.owner"])
        - set(attributes["process.parent_pid"], resource.attributes["process.parent_pid"])
        - set(attributes["process.pid"], resource.attributes["process.pid"])

processors:
  batch/agent:
  resource/agent:
    attributes:
    - action: upsert
      key: service.namespace
      value: agent
  attributes/agent:
    actions:
    - key: service.namespace
      action: upsert
      value: agent
    - key: service.name
      action: upsert
      value: otel-collector
  resourcedetection/system:
    detectors: [ "system" ]
    system:
      hostname_sources: [ "os" ]
  transform:
    metric_statements:
    - context: datapoint
      statements:
      - set(attributes["host.name"], resource.attributes["host.name"])
      - set(attributes["process.command"], resource.attributes["process.command"])
      - set(attributes["process.command_line"], resource.attributes["process.command_line"])
      - set(attributes["process.executable.name"], resource.attributes["process.executable.name"])
      - set(attributes["process.executable.path"], resource.attributes["process.executable.path"])
      - set(attributes["process.owner"], resource.attributes["process.owner"])
      - set(attributes["process.parent_pid"], resource.attributes["process.parent_pid"])
      - set(attributes["process.pid"], resource.attributes["process.pid"])

service:
  telemetry:
    metrics:
      level: detailed

  pipelines:
    metrics/agent:
      receivers: [ otlp, prometheus/agent, hostmetrics/agent ]
      processors: [ attributes/agent, resourcedetection/system, transform, batch/agent ]
      exporters: [ otlp ]
